from collections import deque

alphabet=['a','b','c','d','e','f','g','h','i','j','k','l','o','m','n','p','q','r','s','t','u','v','w','x','y','z']

def solution(begin, target, words):
  answer = 0
  cnt=0
  wordlength=len(begin)
  def bfs():
    q=deque()
    q.append([begin,0])
    visited=[0]*len(words)
    visited[words.index(begin)]=1

    while q:
      now,cnt=q.popleft()
      if now==target:
        return cnt

      for i in range(wordlength):
        for j in alphabet:
          temp=now[:i]+j+now[i+1:]

          if temp in words:
            visited[words.index(temp)]=1
            q.append([temp,cnt+1])
    
    
  bfs(begin,target,words)
            
  return cnt
